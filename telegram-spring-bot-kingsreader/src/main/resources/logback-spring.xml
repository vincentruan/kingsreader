<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 minutes" debug="false">

    <contextName>kindsreader</contextName>

    <property name="log.path" value="/app/logs"/>
    <property name="app.name" value="kingsreader"/>
    <property name="log.charset" value="utf-8"/>

    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,,,, -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} %caller{1} - %msg%n</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!--
          说明：
          1、日志级别及文件
              日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中
              例如：error级别记录到log_error_xxx.log或log_error.log（该文件为当前记录的日志文件），而log_error_xxx.log为归档日志，
              日志文件按日期记录，同一天内，若日志文件大小等于或大于2M，则按0、1、2...顺序分别命名
              例如log-level-2013-12-21.0.log
              其它级别的日志也是如此。
          2、文件路径
              若开发、测试用，在Eclipse中运行项目，则到Eclipse的安装路径查找logs文件夹，以相对路径../logs。
              若部署到Tomcat下，则在Tomcat下的logs文件中
          3、Appender
              FILEERROR对应error级别，文件名以log-error-xxx.log形式命名
              FILEWARN对应warn级别，文件名以log-warn-xxx.log形式命名
              FILEINFO对应info级别，文件名以log-info-xxx.log形式命名
              FILEDEBUG对应debug级别，文件名以log-debug-xxx.log形式命名
              CONSOLE将日志信息输出到控制上，为方便开发测试使用
       -->
    <!-- 日志记录器，日期滚动记录 -->
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/${app.name}/${app.name}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <logger name="com.github.springtg.bot" level="INFO"/>

    <springProfile name="prod">
        <root level="DEBUG">
            <appender-ref ref="rollingFile"/>
        </root>
    </springProfile>

    <springProfile name="dev">
        <root level="WARN">
            <appender-ref ref="STDOUT"/>
        </root>
    </springProfile>
</configuration>